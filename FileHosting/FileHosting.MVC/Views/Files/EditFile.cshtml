@using FileHosting.Database.Models
@using FileHosting.Domain.Enums
@using FileHosting.Domain.Models
@model FileHosting.MVC.ViewModels.FileDetailsViewModel
@{
    ViewBag.Title = "Edit file";
    List<UserModel> users = Model.Users;
    List<Download> downloads = Model.FileModel.Downloads;
    bool allowAnonymousBrowsing = Model.FileModel.IsAllowedAnonymousBrowsing;
    bool allowAnonymousAction = Model.FileModel.IsAllowedAnonymousAction;
    List<User> allowedUsers = Model.FileModel.AllowedUsers;
} 
<div class="panel panel-primary no-margin">
    <div class="panel-body">
        <h3 class="no-margin">@ViewBag.Title</h3>
        <hr />
        <div>
            <a class="btn btn-primary width-200" href="@Model.ReturnUrl" role="button">
                <span class="glyphicon glyphicon-arrow-left"></span>&emsp;Back to my files list
            </a>
        </div>
        <br />
        @if (Model.Message != null)
        {
            string alertType = Model.Message.MessageType == ViewModelsMessageType.A
                ? "alert-success"
                : Model.Message.MessageType == ViewModelsMessageType.B || Model.Message.MessageType == ViewModelsMessageType.C
                    ? "alert-danger"
                    : "alert-warning";
            <div class="alert @alertType alert-custom text-center" role="alert">
                <strong>@Model.Message.MessageText</strong>
                <button type="button" class="close" data-dismiss="alert">
                    <span aria-hidden="true">&times;</span>
                    <span class="sr-only">Close</span>
                </button>
            </div>
        }
        <form class="form-horizontal" action="@Url.Action("EditFile")" method="POST" role="form">
            @Html.AntiForgeryToken()
            <input type="hidden" name="fileId" value="@Model.FileModel.Id" />
            <input type="hidden" name="returnUrl" value="@Model.ReturnUrl" />
            <div class="form-group">
                <label class="col-md-2 control-label" for="fileId">#:</label>
                <div class="col-md-10">
                    <div class="form-control-static" id="fileId">@Model.FileModel.Id</div>
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2 control-label" for="fileName">Name:</label>
                <div class="col-md-10">
                    <div class="form-control-static" id="fileName">@Model.FileModel.Name</div>
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2 control-label" for="fileSection">Section:</label>
                <div class="col-md-10">
                    <div class="form-control-static" id="fileSection">@Model.FileModel.Category.Name</div>
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2 control-label" for="fileTags">Tags:</label>
                <div class="col-md-10">
                    <textarea class="form-control" id="fileTags" name="fileTags" rows="3" data-val-required="Tags cannot be empty!" data-val="true">@Model.FileModel.Tags</textarea>
                    <span class="field-validation-valid" data-valmsg-replace="true" data-valmsg-for="fileTags"></span>
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2 control-label" for="fileDescription">Description:</label>
                <div class="col-md-10">
                    <textarea class="form-control" id="fileDescription" name="fileDescription" rows="3" data-val-required="A description cannot be empty!" data-val="true">@Model.FileModel.Description</textarea>
                    <span class="field-validation-valid" data-valmsg-replace="true" data-valmsg-for="fileDescription"></span>
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2 control-label" for="fileUploadDate">Upload date:</label>
                <div class="col-md-10">
                    <div class="form-control-static" id="fileUploadDate">@Model.FileModel.UploadDate</div>
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2 control-label" for="fileSize">Size (KB):</label>
                <div class="col-md-10">
                    <div class="form-control-static" id="fileSize">@Model.FileModel.Size</div>
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2 control-label" for="fileStatistics">Statistics:</label>
                <div class="col-md-10">
                    <div class="form-control-static" id="fileStatistics">
                        The file has been downloaded for <strong>@downloads.Count</strong> time(s):
                        @if (downloads.Any())
                        {
                            <ul>
                                <li>By registered users – <strong>@downloads.Count(d => d.User != null)</strong></li>
                                <li>By anonymous users – <strong>@downloads.Count(d => d.User == null)</strong></li>
                            </ul>
                        }
                    </div>
                </div>
            </div>
            <hr />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <label>
                        <strong>File is allowed to browse:</strong>
                    </label>
                    <br />
                    <label class="radio-inline">
                        <input type="radio" name="browsingPermission" value="@FileBrowsingPermission.AllUsers" id="browsingPermission1"
                               @if (!allowedUsers.Any() && allowAnonymousBrowsing) { <text> checked="checked" </text> } /> To all users
                    </label>
                    <label class="radio-inline">
                        <input type="radio" name="browsingPermission" value="@FileBrowsingPermission.RegisteredUsers" id="browsingPermission2"
                               @if (!allowedUsers.Any() && !allowAnonymousBrowsing) { <text> checked="checked" </text>  } /> To registered users
                    </label>
                    <label class="radio-inline">
                        <input type="radio" name="browsingPermission" value="@FileBrowsingPermission.SpecificUsers" id="browsingPermission3"
                               @if (allowedUsers.Any() && !allowAnonymousBrowsing) { <text> checked="checked" </text>  } /> To specific users
                    </label>
                    <div class="checkbox-inline @if (!allowAnonymousBrowsing) { <text>display-none</text> }" id="anonymousAction">
                        <label>
                            <input type="checkbox" @if (allowAnonymousAction) { <text> checked="checked" </text>  } />
                            <input type="hidden" name="allowAnonymousAction"
                                @if (allowAnonymousAction) { <text> value="true" </text> } else { <text> value="false" </text> } />
                            <strong>Allow to anonymous users to download this file and write comments to it?</strong>
                        </label>
                    </div>
                    <div class="row-fluid @if (!allowedUsers.Any()) { <text>display-none</text> }" id="allowedUsers">
                        <select class="form-control selectpicker" multiple data-width="100%" title="No users selected" name="allowedUsers[]">
                            @foreach (UserModel user in users)
                            {
                                <option value="@user.Name" @if (allowedUsers.Select(r => r.Name).Contains(user.Name)) { <text> selected="selected" </text> }>
                                    @user.Name
                                </option>
                            }
                        </select>
                    </div>
                </div>
            </div>
            <hr />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button class="btn btn-success" type="submit">
                        <span class="glyphicon glyphicon-ok"></span>&emsp;Save changes
                    </button>&emsp;
                    <a class="btn btn-default btn-cancel" href="javascript:void(0)" role="button">
                        <span class="glyphicon glyphicon-remove"></span>&emsp;Cancel changes
                    </a>&emsp;
                    <a class="btn btn-danger btn-delete-file" href="javascript:void(0)" role="button">
                        <span class="glyphicon glyphicon-trash"></span>&emsp;Delete file
                    </a>
                </div>
            </div>
        </form>
        <form id="deleteFileForm" action="@Url.Action("DeleteFile")" method="POST">
            @Html.AntiForgeryToken()
            <input type="hidden" name="fileId" value="@Model.FileModel.Id" />
            <input type="hidden" name="returnUrl" value="@Model.ReturnUrl" />
        </form>
        <div id="commentsPanel"></div>
    </div>
</div>

@section scripts {
    @Scripts.Render("~/bundles/custom", "~/bundles/bootstrap")

    <script type="text/javascript">
        (function ($) {
            var $browsingPermission = $('input[name=browsingPermission]');
            var $anonymousAction = $('#anonymousAction');
            var $allowedUsers = $('#allowedUsers');
            var $checkbox = $('input:checkbox', $anonymousAction);
            var $input = $('input:hidden', $anonymousAction);

            $browsingPermission.on('change', function (event) {
                event.preventDefault();
                var $radio = $(this);
                var value = $radio.val();
                if (value === 'AllUsers') {
                    $allowedUsers.addClass('display-none');
                    $anonymousAction.removeClass('display-none');
                } else if (value === 'RegisteredUsers') {
                    $anonymousAction.addClass('display-none');
                    $allowedUsers.addClass('display-none');
                } else if (value === 'SpecificUsers') {
                    $anonymousAction.addClass('display-none');
                    $allowedUsers.removeClass('display-none');
                }
            });

            $checkbox.on('change', function (event) {
                event.preventDefault();
                var value = $checkbox.prop('checked');
                $input.val(value);
            });
        })(jQuery);
    </script>
}