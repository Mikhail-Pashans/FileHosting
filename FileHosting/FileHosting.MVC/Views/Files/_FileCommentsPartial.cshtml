@using FileHosting.Domain.Enums
@using FileHosting.MVC.Helpers
@model FileHosting.MVC.ViewModels.FileCommentsViewModel
@{
    Layout = null;
}
<hr />
<h2 class="text-center">Comments</h2>
@if (Model.Message != null)
{
    var alertType = Model.Message.MessageType == ViewModelsMessageType.Success ? "alert-success" : "alert-danger";
    <div class="alert @alertType alert-custom text-center" role="alert"><strong>@Model.Message.MessageText</strong></div>
}
@if (Model.Comments != null && Model.Comments.Any())
{
    foreach (var comment in Model.Comments)
    {
        <div class="well">
            <div class="form-group no-margin">
                <label class="control-label border-bottom" for="commentText">
                    #@comment.Number
                    &emsp;&emsp;&emsp;
                    Author:&ensp;
                    @comment.Author
                    &emsp;&emsp;&emsp;
                    Publish date:&ensp;
                    @comment.PublishDate
                    &emsp;&emsp;&emsp;
                    <input type="checkbox" @if (comment.IsActive) { <text> checked="checked" </text>   } />&nbsp;Is active
                </label>
                @if (Model.IsFileOwner)
                {
                    <div class="pull-right">
                        <form action="@Url.Action("DeleteCommentFromFile")" method="POST" id="deleteCommentForm">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="fileId" value="@Model.FileId" />
                            <input type="hidden" name="commentId" value="@comment.Id" />
                            <button type="submit" class="close" title="Delete comment">
                                <span class="glyphicon glyphicon-remove"></span>
                            </button>
                        </form>
                    </div>
                }
                <div class="form-control-static" id="commentText">@comment.Text</div>
            </div>
        </div>
    }
    <div>
        Page @(Model.PageInfo.TotalPages < Model.PageInfo.PageNumber ? 0 : Model.PageInfo.PageNumber) of @Model.PageInfo.TotalPages
    </div>
    @Html.PageLinks(Model.PageInfo, x => Url.Action("GetCommentsForFile", new { page = x }))
}
else
{
    <div class="alert alert-danger text-center" role="alert"><strong>There are no comments yet!</strong></div>
}
<form action="@Url.Action("AddCommentToFile")" method="POST" role="form" id="newCommentForm">
    @Html.AntiForgeryToken()
    <input type="hidden" name="fileId" value="@Model.FileId" />
    <div class="form-group">
        <label class="control-label" for="newCommentText">Add your comment:</label>
        <textarea class="form-control" id="newCommentText" name="newCommentText" rows="5"></textarea>
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-success form-control-element" id="addCommentButton">
            <span class="glyphicon glyphicon-plus"></span>&emsp;Add comment
        </button>
    </div>
</form>

<script type="text/javascript">
    (function ($) {
        var $addCommentButton = $('#addCommentButton');
        var $newCommentText = $('#newCommentText');
        var $deleteCommentButton = $('#deleteCommentButton');

        $addCommentButton.prop({ disabled: true });

        $newCommentText.on('input propertychange', function () {
            if ($(this).val() !== '') {
                $addCommentButton.prop({ disabled: false });
            } else {
                $addCommentButton.prop({ disabled: true });
            }
        });

        $deleteCommentButton.on('click', function () {
            $('#deleteCommentForm').submit();
        });
    })(jQuery);
</script>