@using FileHosting.Domain.Enums
@using FileHosting.MVC.Helpers
@model FileHosting.MVC.ViewModels.FileCommentsViewModel
@{
    Layout = null;
}
<hr />
<h2 class="text-center">Comments</h2>
@if (Model.Message != null)
{
    var alertType = Model.Message.MessageType == ViewModelsMessageType.A || Model.Message.MessageType == ViewModelsMessageType.C
        ? "alert-success"
        : Model.Message.MessageType == ViewModelsMessageType.B || Model.Message.MessageType == ViewModelsMessageType.D
            ? "alert-danger"
            : "alert-warning";
    <div class="alert @alertType alert-custom text-center" role="alert">
        <strong>@Model.Message.MessageText</strong>
        <button type="button" class="close" data-dismiss="alert">
            <span aria-hidden="true">&times;</span>
            <span class="sr-only">Close</span>
        </button>
    </div>
}
@if (Model.IsAuthenticated || Model.IsAllowedAnonymousAction)
{
    <form action="@Url.Action("AddCommentToFile")" method="POST" role="form" id="newCommentForm">
        @Html.AntiForgeryToken()
        <input type="hidden" name="fileId" value="@Model.FileId" />
        <div class="form-group">
            <label class="control-label" for="newCommentText">Add your comment:</label>
            <textarea class="form-control ckeditor" id="newCommentText" name="newCommentText" rows="5" data-val-required="A comment cannot be empty!" data-val="true"></textarea>
            <span class="field-validation-valid" data-valmsg-replace="true" data-valmsg-for="newCommentText"></span>
        </div>
        <div class="form-group">
            <button type="submit" class="btn btn-success width-200" id="addCommentButton">
                <span class="glyphicon glyphicon-plus"></span>&emsp;Add comment
            </button>
        </div>
    </form>
}
@if (Model.Comments != null && Model.Comments.Any())
{
    foreach (var comment in Model.Comments)
    {
        <div class="panel @if (comment.IsActive) { <text>panel-info</text> } else { <text>panel-danger</text> }">
            <div class="panel-heading">
                <strong>
                    #@comment.Number
                    &emsp;&emsp;&emsp;
                    Author:&ensp;
                    @comment.Author
                    &emsp;&emsp;&emsp;
                    Publish date:&ensp;
                    @comment.PublishDate
                </strong>
                @if (Model.IsFileOwner)
                {
                    <div class="pull-right">
                        <div class="checkbox-inline">
                            <input class="activate-comment-checkbox" type="checkbox" @if (comment.IsActive) { <text> checked="checked" </text>  } value="@comment.Id" />
                            <strong>Is Active</strong>
                        </div>
                        <form class="display-inline margin-left delete-comment-form" action="@Url.Action("DeleteCommentFromFile")" method="POST">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="fileId" value="@Model.FileId" />
                            <input type="hidden" name="commentId" value="@comment.Id" />
                            <button class="close" type="submit" data-toggle="tooltip" data-placement="top" title="Delete comment">
                                <span class="glyphicon glyphicon-trash"></span>
                            </button>
                        </form>
                    </div>
                }
            </div>
            <div class="panel-body">
                @Html.Raw(comment.Text)
            </div>
        </div>
    }
    <div>
        Page @(Model.PageInfo.TotalPages < Model.PageInfo.PageNumber ? 0 : Model.PageInfo.PageNumber) of @Model.PageInfo.TotalPages
    </div>
    @Html.PageLinks(Model.PageInfo, x => Url.Action("GetCommentsForFile", new { page = x }))
}
else
{
    <div class="alert alert-danger text-center" role="alert">
        <strong>There are no any comments yet!</strong>
    </div>
}

<script type="text/javascript">
    (function ($) {        
        var $newCommentText = $('#newCommentText');
        var $closeButtons = $('.close');

        $newCommentText.ckeditor();
        
        $closeButtons.tooltip();        
    })(jQuery);
</script>
