@using FileHosting.Domain.Enums
@model FileHosting.MVC.ViewModels.RegisterViewModel
<h1 class="text-center">Registration</h1>
<br />
<div class="well well-custom width-600">
    <form class="form-horizontal" action="@Url.Action("Register")" method="POST" role="form">
        @Html.AntiForgeryToken()
        <br />
        @if (Model.Message != null && Model.Message.MessageType == ViewModelsMessageType.B)
        {
            <div class="alert alert-danger text-center" role="alert">
                <strong>@Model.Message.MessageText</strong>
            </div>
        }
        <fieldset>
            <div class="form-group">
                @Html.LabelFor(model => model.UserName, new { @class = "col-md-4 control-label" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", placeholder = "User name" } })
                    @Html.ValidationMessageFor(model => model.UserName)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Email, new { @class = "col-md-4 control-label" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "E-mail address" } })
                    @Html.ValidationMessageFor(model => model.Email)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Password, new { @class = "col-md-4 control-label" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Password" } })
                    @Html.ValidationMessageFor(model => model.Password)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword, new { @class = "col-md-4 control-label" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", placeholder = "Confirm password" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.CaptchaText, new { @class = "col-md-4 control-label" })
                <div class="col-md-8">
                    @Html.CaptchaFor(model => model.CaptchaText, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CaptchaText)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-8 col-md-offset-4">
                    <div class="btn-group">
                        <button type="submit" class="btn btn-primary btn-lg">Register</button>
                    </div>
                    <hr />
                    <a class="btn btn-danger btn-xs" href="@Url.Action("Login")">Log in</a>
                </div>
            </div>
        </fieldset>
    </form>
</div>